#!/usr/bin/env node
'use strict'
const path = require('path')
const program = require('commander')
const base = require('../package.json')
const IP = require('../lib/util/IP')
const HOSTS = require('../lib/util/HOSTS')
const fs = require('fs')
const F2E_CONFIG = require('../lib/conf/F2E_CONFIG')
const { execSync } = require('child_process')

program
    .version(base.version)

program
    .command('conf')
    .description(`生成 ${F2E_CONFIG} 配置文件模板`)
    .action(options => {
        fs.readFile(path.join(__dirname, `../${F2E_CONFIG}`), function (err, data) {
            !err && fs.writeFile(path.resolve(F2E_CONFIG), data, function (err) {
                err && console.log(err)
            })
        })
    })
program
    .command('build')
    .option('-w, --watch <watch>', 'build with watching-update')
    .option('-t, --timeout <timeout>', 'build-in with timeout(1000ms) after build-out')
    .description('编译输出')
    .action(({watch, timeout}) => {
        timeout = (timeout | 0) || 1000
        let beginTime = Date.now() + timeout
        console.log('build begin...')
        require('../lib/util/build')(function () {
            console.log('build finished' + (watch ? '!\n  & building...' : ' with: ' + (Date.now() - beginTime) + 'ms' ))
        }, {watch, timeout})
    })
program
    .command('start')
    .option('-p, --port <port>', 'http server port')
    .option('-H, --host <host>', 'port 80 & set local host')
    .option('-B, --build <build>', 'build with true')
    .description('启动服务器')
    .action(options => {
        require('../index')(options)
    })

program
    .command('ip')
    .description('获取本地IP')
    .action(options => console.log(IP))

program
    .command('host')
    .description('加入host映射')
    .action(options => {
        HOSTS(options)
    })

program
    .command('create')
    .description('创建单页App')
    .action(appname => {
        execSync(`git clone https://github.com/shy2850/create-ipreact-app ${appname} && rm -rf ${appname}/.git`)
    })
// 开始解析用户输入的命令
program.parse(process.argv)
